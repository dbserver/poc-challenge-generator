# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - name: k8sNamespace
    value: challenge-generator

  - name: connectionType
    value: Kubernetes Service Connection

  - name: aksServiceConnection
    value: 'AKS-DB'

stages:
    - stage: CI
      jobs:
        - job: CI
          displayName: "Install, build and build&push docker"
          steps:
            - task: Npm@1
              inputs:
                command: install
                workingDir: ./
              displayName: "npm install"
              
            - task: Npm@1
              inputs:
                command: custom
                workingDir: ./
                customCommand: "run build"
              displayName: "run build"

            - task: Docker@2
              inputs:
                containerRegistry: 'container-registry-celula'
                repository: 'challenge-generator'
                command: 'buildAndPush'
                Dockerfile: '**/Dockerfile'
                tags: |
                  $(Build.BuildId)
                  latest

    - stage: DeployAKS 
      variables:
      - group: challenge-generator-env
      jobs:
        - job: ApplyManifests
          steps:
            - task: Kubernetes@1
              displayName: Create secret
              inputs:
                connectionType: $(connectionType)
                kubernetesServiceEndpoint: $(aksServiceConnection)
                namespace: $(k8sNamespace)
                containerRegistryType: "Azure Container Registry"
                secretName:  "challenge-generator-secrets"
                secretType: generic
                secretArguments: >
                      --from-literal=OPEN_AI_API_KEY=$(OPEN_AI_API_KEY)

            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes
              inputs:
                action: deploy
                namespace: $(k8sNamespace)
                kubernetesServiceConnection: $(aksServiceConnection)
                manifests: |
                  ./kubernetes/deployment.yml
                  ./kubernetes/service.yml
                containers: celula.azurecr.io/challenge-generator:latest

            - task: Kubernetes@1
              displayName: Apply Ingress
              inputs:
                connectionType: $(connectionType)
                kubernetesServiceEndpoint: $(aksServiceConnection)
                namespace: $(k8sNamespace)
                command: 'apply'
                useConfigurationFile: true
                configuration: './kubernetes/ingress.yml'
                outputFormat: none